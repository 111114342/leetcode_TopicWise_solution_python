# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: ListNode, n: int) -> ListNode:
        if(head==None):
            return head.next
        else:
            curr=head
            prev=head
            post_prev=head
            for i in range(n):
                    curr=curr.next
            if curr is None:
                return head.next
            while curr.next!=None:
                curr=curr.next
                post_prev=prev
                prev=prev.next
            post_prev.next=prev.next
            return head
            
                
        
